O(1) < O(log n) < O(n) < O(nlogn) < O(n2) < O(2n) < O(n!)


log 2 (8) means => what do we want to power the 2 by, to get 8. Which is 2 pow 3 = 8.
log 2 (8) => 8 divideed by 2 several times to reach 1. That is, 8 -> 4 -> 2 -> 1. Which is 3 times

In calculas,         log n => log 10 (n)
In computer science, log n => log 2 (n)

log n => Total levels (Example in a binary search tree). Example, in binary search tree for n = 9, 1 + log 9 => 1 + floor(log 9) = 1 + [3.17] = 1 + 3 = 4 levels.

For all binary seaches , like cutting problem into half, the time complexity will be in terms of log n.